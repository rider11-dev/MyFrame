@using MyFrame.RBAC.ViewModel
@model ModuleViewModel
<link href="~/libs/plugins/iCheck/square/blue.css" rel="stylesheet" />
<div id="form-add-module">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.Code, new { @class = "control-label pull-right" })
        </div>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.Code, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Code)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.Name, new { @class = "control-label pull-right" })
        </div>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.LinkUrl, new { @class = "control-label pull-right" })
        </div>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.LinkUrl, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LinkUrl)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.Icon, new { @class = "control-label pull-right" })
        </div>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.Icon, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Icon)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.SortOrder, new { @class = "control-label pull-right" })
        </div>
        <div class="col-sm-8">
            @Html.TextBoxFor(m => m.SortOrder, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SortOrder)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.ParentName, new { @class = "control-label pull-right" })
        </div>
        <div class="col-sm-8">
            @Html.HiddenFor(m => m.ParentId)
            <div class="input-group">
                @Html.TextBoxFor(m => m.ParentName, new { @class = "form-control", @readonly = "readonly" })
                <div id="btnHelpParentModule" class="btn btn-primary input-group-addon">选择...</div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.Enabled, new { @class = "control-label pull-right" })
        </div>
        <div class="checkbox icheck col-sm-8">
            @Html.CheckBoxFor(m => m.Enabled, new { @class = "myCheck" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.LabelFor(m => m.IsSystem, new { @class = "control-label pull-right" })
        </div>
        <div class="checkbox icheck col-sm-8">
            @Html.CheckBoxFor(m => m.IsSystem, new { @class = "myCheck" })
        </div>
    </div>
</div>
<script>
    var moduleAdd = {
        urlModuleTreeHelp: "@Url.Action("TreeHelp")",
        btnHelpParentModule: $('#btnHelpParentModule'),
        init: function () {
            moduleAdd.btnHelpParentModule.click(function () {
                //console.log('modulemanage.btnHelpParentModule.click enter');
                modalFormHelp.show({
                    title: '模块帮助',
                    urlHelp: moduleAdd.urlModuleTreeHelp,
                    urlParams: {},
                    onSubmitCallback: function () {
                        //1、获取选择的节点
                        var moduleData = moduleTreeHelp.treeModule.getSelectedData(['id', 'text']);
                        //console.log(moduleData);
                        if (gFunc.isNull(moduleData) || moduleData.length < 1) {
                            return false;
                        }
                        //2、给界面赋值
                        $('#ParentId').val(moduleData[0]['id']);
                        $('#ParentName').val(moduleData[0]['text']);
                        console.log('#ParentName:' + $('#ParentName').val());
                        return true;
                    },
                    onLoadCallback: function () {
                        console.log('onLoadCallback called');

                    }
                });
            });
        }
    };

    $(function () {
        gFunc.setCheckBoxStyle('input.myCheck');
        moduleAdd.init();
    });
</script>